# Generated by Django 4.1.3 on 2022-11-24 18:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Animo',
            fields=[
                ('id_Animo', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Animo')),
                ('valor_animo', models.IntegerField(verbose_name='Valor Animo')),
                ('nombre_animo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nombre Animo')),
            ],
        ),
        migrations.CreateModel(
            name='Descuento',
            fields=[
                ('id_descuento', models.AutoField(primary_key=True, serialize=False, verbose_name='id Descuento')),
                ('descuento', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Descuento')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha Inicio')),
                ('fecha_fin', models.DateField(verbose_name='Fecha Fin')),
                ('ticket_decuento', models.CharField(max_length=100, verbose_name='Direccion Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Diabetes',
            fields=[
                ('id_diabetes', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Diabetes')),
                ('tipo_diabetes', models.CharField(max_length=100, verbose_name='Tipo Diabetes')),
            ],
        ),
        migrations.CreateModel(
            name='Dosis',
            fields=[
                ('id_dosis', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Dosis')),
                ('cantidad_dosis', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='Cantidad Dosis')),
            ],
        ),
        migrations.CreateModel(
            name='Estado_monitoreo',
            fields=[
                ('id_estado_monitoreo', models.AutoField(primary_key=True, serialize=False, verbose_name='Id estado Monitoreo')),
                ('valor_automonitoreo', models.IntegerField(verbose_name='Valor Automonitoreo')),
                ('estado_monitoreo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado Monitoreo')),
            ],
        ),
        migrations.CreateModel(
            name='Forma_farmaceutica',
            fields=[
                ('id_forma_farmaceutica', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Forma Farmaceutica')),
                ('forma_farmaceutica', models.CharField(max_length=100, verbose_name='Forma Farmaceutica')),
            ],
        ),
        migrations.CreateModel(
            name='Hipertension',
            fields=[
                ('id_hipertension', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Hipertension')),
                ('estado_hipertension', models.CharField(max_length=100, verbose_name='Estado Hipertension')),
            ],
        ),
        migrations.CreateModel(
            name='Laboratorio',
            fields=[
                ('id_laboratorio', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Laboratorio')),
                ('laboratorio', models.CharField(max_length=100, verbose_name='Laboratorio')),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id_marca', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Marca')),
                ('marca', models.CharField(max_length=100, verbose_name='Marca')),
            ],
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('id_medicamento', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Medicamento')),
                ('nombre_medicamento', models.CharField(max_length=100, verbose_name='Nombre Medicamento')),
                ('medida_medicamento', models.IntegerField(verbose_name='Medida Medicamento')),
                ('cantidad_comprimidos', models.IntegerField(verbose_name='Cantidad Medicamento')),
                ('forma_farmaceutica', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.forma_farmaceutica', verbose_name='Forma_farmaceutica')),
                ('laboratorio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.laboratorio', verbose_name='Laboratorio')),
                ('marca', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.marca', verbose_name='Marca')),
            ],
        ),
        migrations.CreateModel(
            name='Receta',
            fields=[
                ('id_receta', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Receta')),
                ('fecha_receta', models.DateField(verbose_name='Fecha Receta')),
                ('horario_medicamento', models.TimeField(verbose_name='Hora Medicamento')),
                ('dosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.dosis', verbose_name='Dosis')),
                ('medicamento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.medicamento', verbose_name='Medicamento')),
            ],
            options={
                'ordering': ['horario_medicamento'],
            },
        ),
        migrations.CreateModel(
            name='Recomendacion_consumo',
            fields=[
                ('id_recomendacion', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Recomendacion')),
                ('recomendacion', models.CharField(max_length=100, verbose_name='Recomendacion')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id_region', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Region')),
                ('nombre_region', models.CharField(max_length=100, verbose_name='Nombre Region')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_farmaco',
            fields=[
                ('id_tipo_farmaco', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Tipo Farmaco')),
                ('tipo_farmaco', models.CharField(max_length=100, verbose_name='Tipo Farmaco')),
                ('descripcion_tipo_farmaco', models.CharField(max_length=400, verbose_name='Descripcion Tipo Farmaco')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Usuario',
            fields=[
                ('id_tipo_usuario', models.AutoField(primary_key=True, serialize=False, verbose_name='id palta')),
                ('nombre_tipo_usuario', models.CharField(max_length=100, verbose_name='Nombre tipo usuario')),
                ('descripcion', models.CharField(max_length=400, verbose_name='Descripcion')),
            ],
        ),
        migrations.CreateModel(
            name='Via_ingesta',
            fields=[
                ('id_via_ingesta', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Via Ingesta')),
                ('via_ingesta', models.CharField(max_length=100, verbose_name='Via Ingesta')),
            ],
        ),
        migrations.CreateModel(
            name='Familiar',
            fields=[
                ('id_familiar', models.IntegerField(verbose_name='Id Familiar')),
                ('username_familiar', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('rut_familiar', models.CharField(max_length=10, verbose_name='Rut Familiar')),
                ('nombre_familiar', models.CharField(max_length=100, verbose_name='Nombre Familiar')),
                ('apellido_familiar', models.CharField(max_length=100, verbose_name='Apellido Familiar')),
                ('direccion_familiar', models.CharField(max_length=100, verbose_name='Direccion Familiar')),
                ('email_familiar', models.CharField(max_length=100, verbose_name='Email Familiar')),
                ('telefono_familiar', models.CharField(blank=True, max_length=9, null=True, verbose_name='Telefono Familiar')),
                ('whatsaap_familiar', models.CharField(max_length=9, verbose_name='Whatsaap Familiar')),
                ('celular_familiar', models.CharField(max_length=9, verbose_name='Celular Familiar')),
                ('telegram_familiar', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telegram Familiar')),
            ],
        ),
        migrations.CreateModel(
            name='Fonoaudiologo',
            fields=[
                ('id_fonoaudiologo', models.IntegerField(verbose_name='Id Usuario')),
                ('username_fonoaudiologo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('rut_fonoaudiologo', models.CharField(max_length=10, verbose_name='Rut fonoaudiologo')),
                ('nombre_fonoaudiologo', models.CharField(max_length=100, verbose_name='Nombre fonoaudiologo')),
                ('apellido_fonoaudiologo', models.CharField(max_length=100, verbose_name='Apellido fonoaudiologo')),
                ('direccion_fonoaudiologo', models.CharField(max_length=100, verbose_name='Direccion fonoaudiologo')),
                ('email_fonoaudiologo', models.CharField(max_length=100, verbose_name='Email fonoaudiologo')),
                ('telefono_fonoaudiologo', models.CharField(blank=True, max_length=9, null=True, verbose_name='Telefono fonoaudiologo')),
                ('whatsaap_fonoaudiologo', models.CharField(max_length=9, verbose_name='Whatsaap fonoaudiologo')),
                ('celular_fonoaudiologo', models.CharField(max_length=9, verbose_name='Celular fonoaudiologo')),
                ('telegram_fonoaudiologo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telegram fonoaudiologo')),
            ],
        ),
        migrations.CreateModel(
            name='Neurologo',
            fields=[
                ('id_neurologo', models.IntegerField(verbose_name='Id Usuario')),
                ('username_neurologo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('rut_neurologo', models.CharField(max_length=10, verbose_name='Rut Neurologo')),
                ('nombre_neurologo', models.CharField(max_length=100, verbose_name='Nombre Neurologo')),
                ('apellido_neurologo', models.CharField(max_length=100, verbose_name='Apellido Neurologo')),
                ('direccion_neurologo', models.CharField(max_length=100, verbose_name='Direccion Neurologo')),
                ('email_neurologo', models.CharField(max_length=100, verbose_name='Email Neurologo')),
                ('telefono_neurologo', models.CharField(blank=True, max_length=9, null=True, verbose_name='Telefono Neurologo')),
                ('whatsaap_neurologo', models.CharField(max_length=9, verbose_name='Whatsaap Neurologo')),
                ('celular_neurologo', models.CharField(max_length=9, verbose_name='Celular Neurologo')),
                ('telegram_neurologo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telegram Neurologo')),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id_paciente', models.IntegerField(verbose_name='Id Paciente')),
                ('username_paciente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('rut_paciente', models.CharField(max_length=10, verbose_name='Rut Paciente')),
                ('nombre_paciente', models.CharField(max_length=100, verbose_name='Nombre Paciente')),
                ('apellido_paciente', models.CharField(max_length=100, verbose_name='Apellido Paciente')),
                ('direccion_paciente', models.CharField(max_length=100, verbose_name='Direccion Paciente')),
                ('email_paciente', models.EmailField(max_length=100, verbose_name='Email Paciente')),
                ('telefono_paciente', models.CharField(blank=True, max_length=9, null=True, verbose_name='Telefono Paciente')),
                ('whatsaap_paciente', models.CharField(max_length=9, verbose_name='Whatsaap Paciente')),
                ('celular_paciente', models.CharField(max_length=9, verbose_name='Celular Paciente')),
                ('telegram_paciente', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telegram Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Recordatorio_grabacion',
            fields=[
                ('id_recordatorio', models.AutoField(primary_key=True, serialize=False, verbose_name='Id recordatorio')),
                ('hora_recordatorio', models.TimeField(verbose_name='Hora Recordatorio')),
                ('receta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.receta', verbose_name='Receta')),
            ],
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id_provincia', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Provincia')),
                ('nombre_provincia', models.CharField(max_length=100, verbose_name='Nombre Provincia')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.region', verbose_name='Region')),
            ],
        ),
        migrations.AddField(
            model_name='medicamento',
            name='recomendacion',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.recomendacion_consumo', verbose_name='Recomendacion_consumo'),
        ),
        migrations.AddField(
            model_name='medicamento',
            name='tipo_farmaco',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.tipo_farmaco', verbose_name='Tipo_farmaco'),
        ),
        migrations.AddField(
            model_name='medicamento',
            name='via_ingesta',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.via_ingesta', verbose_name='Via_ingesta'),
        ),
        migrations.CreateModel(
            name='Descuento_usado',
            fields=[
                ('id_descuento_usado', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Descuento Usado')),
                ('fecha_usado', models.DateField(verbose_name='Fecha Usado')),
                ('descuento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.descuento', verbose_name='Descuento')),
                ('username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
        ),
        migrations.AddField(
            model_name='descuento',
            name='medicamento',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.medicamento', verbose_name='Medicamento'),
        ),
        migrations.CreateModel(
            name='Comuna',
            fields=[
                ('id_comuna', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Comuna')),
                ('nombre_comuna', models.CharField(max_length=100, verbose_name='Nombre Comuna')),
                ('provincia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.provincia', verbose_name='Provincia')),
            ],
        ),
        migrations.AddField(
            model_name='usuario',
            name='tipo_usuario',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.tipo_usuario', verbose_name='Tipo Usuario'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Vocalizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Monitoreo')),
                ('url_archivo_vocalizacion', models.FileField(upload_to='vocalizacion/')),
                ('duracion', models.IntegerField(null=True, verbose_name='Duracion')),
                ('bpminute', models.IntegerField(null=True, verbose_name='BPM Beats Per Minute ')),
                ('bpmeasure', models.IntegerField(null=True, verbose_name='Beats Per Measure')),
                ('comentario', models.CharField(max_length=500, null=True, verbose_name='Comentarios')),
                ('username_paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='receta',
            name='username_paciente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='comuna',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.comuna', verbose_name='Comuna'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='diabetes',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.diabetes', verbose_name='Diabetes'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='hipertension',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.hipertension', verbose_name='Hipertension'),
        ),
        migrations.CreateModel(
            name='Neurologo_paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_neurologo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.neurologo', verbose_name='Neurologo')),
                ('username_paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente')),
            ],
        ),
        migrations.AddField(
            model_name='neurologo',
            name='comuna',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.comuna', verbose_name='Comuna'),
        ),
        migrations.CreateModel(
            name='Intensidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Monitoreo')),
                ('url_archivo_intensidad', models.FileField(upload_to='intensidad/')),
                ('intensidad', models.IntegerField(null=True, verbose_name='Intensidad')),
                ('mindb', models.IntegerField(null=True, verbose_name='Min dB')),
                ('maxdb', models.IntegerField(null=True, verbose_name='Max dB')),
                ('comentario', models.CharField(max_length=500, null=True, verbose_name='Comentarios')),
                ('username_paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Fonoaudiologo_paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_fonoaudiologo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.fonoaudiologo', verbose_name='Fonoaudiologo')),
                ('username_paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente')),
            ],
        ),
        migrations.AddField(
            model_name='fonoaudiologo',
            name='comuna',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.comuna', verbose_name='Comuna'),
        ),
        migrations.CreateModel(
            name='Familiar_paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_familiar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.familiar', verbose_name='Familiar')),
                ('username_paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente')),
            ],
        ),
        migrations.AddField(
            model_name='familiar',
            name='comuna',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.comuna', verbose_name='Comuna'),
        ),
        migrations.CreateModel(
            name='Estado_animo',
            fields=[
                ('id_estado_animo', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Estado Animo')),
                ('fecha_estado_animo', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Estado Animo')),
                ('animo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.animo', verbose_name='Animo')),
                ('username_paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente')),
            ],
            options={
                'ordering': ['-fecha_estado_animo'],
            },
        ),
        migrations.CreateModel(
            name='Automonitoreo',
            fields=[
                ('id_monitoreo', models.AutoField(primary_key=True, serialize=False, verbose_name='id Monitoreo')),
                ('fecha_automonitoreo', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Monitoreo')),
                ('estado_monitoreo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.estado_monitoreo', verbose_name='Estado_monitoreo')),
                ('username_paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente')),
            ],
            options={
                'ordering': ['-fecha_automonitoreo'],
            },
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Monitoreo')),
                ('url_archivo_audio', models.FileField(upload_to='audios/')),
                ('jitter_ppq5', models.IntegerField(null=True, verbose_name='jitter ppq5')),
                ('jitter_rap', models.IntegerField(null=True, verbose_name='jitter rap')),
                ('maximum_pitch', models.IntegerField(null=True, verbose_name='maximum pitch')),
                ('error_jitter_ppq5', models.IntegerField(null=True, verbose_name='error jitter ppq5')),
                ('error_jitter_rap', models.IntegerField(null=True, verbose_name='error jitter rap')),
                ('error_maximum_pitch', models.IntegerField(null=True, verbose_name='error maximum pitch')),
                ('username_paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.paciente', verbose_name='Paciente')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
